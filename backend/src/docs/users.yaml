components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    requestBodies:
        RegisterUser:
            type: Object
            properties:
                username:
                    type: String
                    description: 2-15 letters
                email:
                    type: String
                    description: RFC 5322
                password:
                    type: String
                    description: 8-20 letters, must have a lowercase, an uppercase and a number
                image:
                    type: String
                    description: optional...
            example:
                username: admin
                email: email@email.com
                password: Admin123
                image: ''
        LoginUser:
            type: Object
            properties:
                email:
                    type: String
                    description: RFC 5322
                password:
                    type: String
                    description: 8-20 letters, must have a lowercase, an uppercase and a number
            example:
                email: email@email.com
                password: Admin123
        UpdateEmail:
            type: Object
            properties:
                email:
                    type: String
                    description: New email
            example:
                email: new@email.com
        UpdatePassword:
            type: Object
            properties:
                oldPassword:
                    type: String
                    description: oldPass
                newPassword:
                    type: String
                    description: newPass
            example:
                oldPassword: 'OldPassword'
                newPassword: 'NewPassword'
        Unregister:
            type: Object
            properties:
                password:
                    type: String
                    description: Current password
            example:
                password: CurrentPassword
    responseAndErrors:
        UserAdded:
            type: Object
            properties:
                result:
                    type: String
            example:
                result: User created
        UserConflict:
            type: Object
            properties:
                result:
                    type: String
            example:
                result: User email already exist
        WrongFields:
            type: Object
            properties:
                errors:
                    type: Array
            example:
                errors: ['Wrong username || email || password']
        LoginToken:
            type: Object
            properties:
                token:
                    type: String
            example:
                token: jsonwebtoken
        WrongCredentials:
            type: Object
            properties:
                error:
                    type: String
            example:
                error: Wrong credentials
        UserProfile:
            type: Object
            properties:
                result:
                    type: Object
            example:
                result: { username: 'username', email: 'email', image: 'image' }
        Unauthorized:
            type: Object
            properties:
                error:
                    type: Object
            example:
                error: User no authorized
        UserEmail:
            type: Object
            properties:
                result:
                    type: Object
            example:
                result: User email updated
        UserPassword:
            type: Object
            properties:
                result:
                    type: Object
            example:
                result: User password updated
        UnregisterUser:
            type: Object
            properties:
                result:
                    type: Object
            example:
                result: User deleted
paths:
    /api/register:
        post:
            summary: Register an user on database
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/requestBodies/RegisterUser'
            responses:
                '201':
                    description: Created user on database
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/UserAdded'
                '400':
                    description: Bad request - wrong fields
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/WrongFields'
                '409':
                    description: Conflict, user already exist on database
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/UserConflict'
    /api/login:
        post:
            summary: Login with email & password
            tags:
                - Users
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/requestBodies/LoginUser'
            responses:
                '200':
                    description: User loggedin
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/LoginToken'
                '400':
                    description: Bad request - wrong fields
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/WrongFields'
                '401':
                    description: Wrong credentials - unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/WrongCredentials'
    /api/profile:
        get:
            summary: User Profile
            tags:
                - Users
            security:
                - bearerAuth: []
            responses:
                '200':
                    description: Get user profile
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/UserProfile'
                '401':
                    description: Invalid TOKEN
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/Unauthorized'
    /api/update-email:
        patch:
            summary: Update user email
            tags:
                - Users
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/requestBodies/UpdateEmail'
            responses:
                '200':
                    description: Email user chanched
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/UserEmail'
                '400':
                    description: Bad request - wrong fields
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/WrongFields'
                '401':
                    description: Invalid TOKEN
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/Unauthorized'
    /api/update-password:
        patch:
            summary: Updated user password
            tags:
                - Users
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/requestBodies/UpdatePassword'
            responses:
                '200':
                    description: Password user changed
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/UserPassword'
                '400':
                    description: Bad request - wrong fields
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/WrongFields'
                '401':
                    description: Invalid TOKEN
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/Unauthorized'
    /api/unregister:
        delete:
            summary: Unregister user
            tags:
                - Users
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/requestBodies/Unregister'
            responses:
                '200':
                    description: User deleted
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/UnregisterUser'
                '400':
                    description: Bad request - wrong fields
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/WrongFields'
                '401':
                    description: Invalid TOKEN
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseAndErrors/Unauthorized'
