# *****Components*****
components:
    # Auth schema
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    # Request examples
    requestBodies:
        PaymentInfo:
            type: Object
            properties:
                pmid:
                    type: String
                amoung:
                    type: Number
                total:
                    type: Number
            example:
                pmid: pm_123456789
                amount: 100
                total: 100
    # OK response
    responseBodies:
        UserCart:
            type: Object
            properties:
                results:
                    type: Object
                    properties:
                        _id:
                            type: String
                        products:
                            type: Array
            example:
                results: { _id: (uuidv4), products: [] }
        UserCartUpdated:
            type: Object
            properties:
                results:
                    type: Object
            example:
                results: cart updated
        PaymentSuccesfully:
            type: Object
            properties:
                results:
                    type: Object
            example:
                results: payment succesfully
    # Error response
    responseErrorBodies:
        Unauthorized:
            type: Object
            properties:
                errors:
                    type: Object
            example:
                errors: user unauthorized
        WrongFields:
            type: Object
            properties:
                errors:
                    type: Array
            example:
                errors: ['Wrong fields...']
        CartNotFound:
            type: Object
            properties:
                errors:
                    type: Object
            example:
                errors: cart not found
        BothNotFound:
            type: Object
            properties:
                errors:
                    type: Object
            example:
                errors: cart|product not found
        ProductConflict:
            type: Object
            properties:
                errors:
                    type: Object
            example:
                errors: product conflict
# *****Paths*****
paths:
    /api/carts/{cartId}:
        get:
            summary: Returns a user's cart
            tags:
                - Carts
            security:
                - bearerAuth: []
            parameters:
                - name: cartId
                  in: path
                  required: true
                  description: CartId(uuidv4)
                  schema:
                      type: string
            responses:
                '200':
                    description: OK (user cart)
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseBodies/UserCart'
                '400':
                    description: Invalid Params Field - Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/WrongFields'
                '401':
                    description: Invalid Credentials | Token - Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/Unauthorized'
                '404':
                    description: Invalid cartId(uuidv4) - Not Found
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/CartNotFound'
    /api/carts/{cartId}/{productId}:
        post:
            summary: Add a product to the user cart
            tags:
                - Carts
            security:
                - bearerAuth: []
            parameters:
                - name: cartId
                  in: path
                  required: true
                  description: cartId(uuidV4)
                  schema:
                      type: string
                - name: productId
                  in: path
                  required: true
                  description: productId(uuidV4)
                  schema:
                      type: string
            responses:
                '202':
                    description: OK (cart updated)
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseBodies/UserCartUpdated'
                '400':
                    description: Invalid Params Fields - Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/WrongFields'
                '401':
                    description: Invalid Credentials | Token - Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/Unauthorized'
                '404':
                    description: Invalid cartId|productId(uuidv4) - Not Found
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/BothNotFound'
                '409':
                    description: Product already exists in the user's cart - Conflict
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/ProductConflict'
        delete:
            summary: Removes a product from the user's cart
            tags:
                - Carts
            security:
                - bearerAuth: []
            parameters:
                - name: cartId
                  in: path
                  required: true
                  description: cartId(uuidV4)
                  schema:
                      type: string
                - name: productId
                  in: path
                  required: true
                  description: productId(uuidV4)
                  schema:
                      type: string
            responses:
                '202':
                    description: OK (product removed from cart)
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseBodies/UserCartUpdated'
                '400':
                    description: Invalid Params Fields - Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/WrongFields'
                '401':
                    description: Invalid Credentials | Token - Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/Unauthorized'
                '404':
                    description: Invalid cartId|productId(uuidv4) - Not Found
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/BothNotFound'
    /api/carts/payments-products:
        post:
            summary: Add a product to the user cart
            tags:
                - Carts
            security:
                - bearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            $ref: '#/components/requestBodies/PaymentInfo'
            responses:
                '200':
                    description: OK (payment succesfully)
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseBodies/PaymentSuccesfully'
                '400':
                    description: Invalid Body Fields - Bad Request
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/WrongFields'
                '401':
                    description: Invalid Credentials | Token - Unauthorized
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/Unauthorized'
                '404':
                    description: Invalid cartId(uuidv4) - Not Found
                    content:
                        application/json:
                            schema:
                                type: object
                                $ref: '#/components/responseErrorBodies/BothNotFound'
